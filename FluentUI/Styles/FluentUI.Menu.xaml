<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Fluent.styles="clr-namespace:FluentUI.Styles"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:Fluent="clr-namespace:FluentUI">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="FluentUI.Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--<Geometry x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>-->
    <ControlTemplate x:Key="FluentSubmenuItemTemplate" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <Rectangle x:Name="bd" Fill="{TemplateBinding Background}"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="26" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="4"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="37"/>
                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="17"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" ContentSource="Icon" Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                <Fluent:FluentIcon x:Name="GlyphPanel" Icon="CheckMark" Size="12" VerticalAlignment="Center" Foreground="{StaticResource Neutral.Gray130}" Margin="6" Visibility="Collapsed" />
                <ContentPresenter Grid.Column="2" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Text="{TemplateBinding InputGestureText}"/>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Fill" TargetName="bd" Value="{StaticResource Neutral.Gray20}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{StaticResource Neutral.Gray20}"/>
                <Setter Property="Foreground" Value="{StaticResource Neutral.Gray90}"/>
                <Setter Property="TextElement.Foreground" TargetName="Icon" Value="{StaticResource Neutral.Gray90}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!-- Menu items ScrollViewer template -->
    <!--<Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>-->
    <Style x:Key="FluentMenuScrollButton" BasedOn="{x:Null}" TargetType="{x:Type RepeatButton}">
        <Setter Property="ClickMode" Value="Hover"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <DockPanel Background="Transparent" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="ContentContainer" HorizontalAlignment="Center" Margin="2,2,2,2" VerticalAlignment="Center"/>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Margin" TargetName="ContentContainer" Value="3,3,1,1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
    <!--<Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>-->
    <Style x:Key="FluentMenuItemScrollViewer" BasedOn="{x:Null}" TargetType="{x:Type ScrollViewer}">
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Column="0" Grid.Row="1">
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <RepeatButton Grid.Column="0" 
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" 
                                      Command="{x:Static ScrollBar.LineUpCommand}" 
                                      Focusable="false" 
                                      Grid.Row="0" 
                                      Style="{StaticResource FluentMenuScrollButton}">
                            <RepeatButton.Visibility>
                                <MultiBinding ConverterParameter="0" Converter="{StaticResource MenuScrollingVisibilityConverter}" FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Data="M 0,4 L 3.5,0 L 7,4 Z" Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
                        </RepeatButton>
                        <RepeatButton Grid.Column="0" 
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" 
                                      Command="{x:Static ScrollBar.LineDownCommand}" 
                                      Focusable="false" 
                                      Grid.Row="2" 
                                      Style="{StaticResource FluentMenuScrollButton}">
                            <RepeatButton.Visibility>
                                <MultiBinding ConverterParameter="100" Converter="{StaticResource MenuScrollingVisibilityConverter}" FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Data="M 0,0 L 3.5,4 L 7,0 Z" Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Resource dictionary entries should be defined here. -->
    <ControlTemplate x:Key="FluentMenuItemSubmenuContentTemplate" TargetType="{x:Type ContentControl}">
        <Border Background="{StaticResource Neutral.White}">
            <Grid>
                <ContentPresenter Grid.ColumnSpan="2" Margin="0,0"/>
            </Grid>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="FluentMenuItemTopLevelHeaderTemplate" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <Rectangle x:Name="bd" Fill="{TemplateBinding Background}" />
            <DockPanel>
                <ContentPresenter x:Name="Icon" ContentSource="Icon" Margin="4,0,6,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                <Fluent:FluentIcon x:Name="GlyphPanel" Icon="CheckMark" Size="12" VerticalAlignment="Center" Foreground="{StaticResource Neutral.Gray130}" Visibility="Collapsed" Margin="6"/>
                <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </DockPanel>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" HorizontalOffset="-10" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MaxWidth="{Binding ActualWidth, ElementName=bd}"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Border Grid.Row="1" 
                            Grid.ColumnSpan="2" 
                            Background="{StaticResource Neutral.White}" 
                            Margin="10,0,10,10" 
                            Effect="{StaticResource Depth4}">
                        <ContentControl x:Name="SubMenuBorder" 
                                        IsTabStop="false" 
                                        Template="{StaticResource FluentMenuItemSubmenuContentTemplate}">
                            <ScrollViewer CanContentScroll="true" 
                                          Style="{StaticResource FluentMenuItemScrollViewer}">
                                <ItemsPresenter 
                                    KeyboardNavigation.DirectionalNavigation="Cycle" 
                                    Grid.IsSharedSizeScope="true" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                    KeyboardNavigation.TabNavigation="Cycle"/>
                            </ScrollViewer>
                        </ContentControl>
                    </Border>
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Fill" TargetName="bd" Value="{StaticResource Neutral.Gray20}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter Property="Fill" TargetName="bd" Value="{StaticResource Neutral.Gray20}"/>
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="true">
                <Setter Property="Fill" TargetName="bd" Value="{StaticResource Neutral.Gray30}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{StaticResource Neutral.Gray20}"/>
                <Setter Property="Foreground" Value="{StaticResource Neutral.Gray90}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <ControlTemplate x:Key="FluentMenuItemTopLevelItemTemplate" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <Rectangle x:Name="bd" Fill="{TemplateBinding Background}"/>
            <DockPanel>
                <ContentPresenter x:Name="Icon" ContentSource="Icon" Margin="4,0,6,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                <Fluent:FluentIcon x:Name="GlyphPanel" Icon="CheckMark" Size="12" VerticalAlignment="Center" Foreground="{StaticResource Neutral.Gray130}" Margin="6" Visibility="Collapsed"/>
                <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </DockPanel>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Fill" TargetName="bd" Value="{StaticResource Neutral.Gray20}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter Property="Fill" TargetName="bd" Value="{StaticResource Neutral.Gray20}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{StaticResource Neutral.Gray20}"/>
                <Setter Property="Foreground" Value="{StaticResource Neutral.Gray90}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <ControlTemplate x:Key="FluentMenuItemSubmenuHeaderTemplate" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <Rectangle x:Name="bd" 
                       Fill="{TemplateBinding Background}" 
                       Stroke="{TemplateBinding BorderBrush}"
                       StrokeThickness="0"
                       />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="26" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="4"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="37"/>
                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="17"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" ContentSource="Icon" Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                <Fluent:FluentIcon x:Name="GlyphPanel" Icon="CheckMark" Size="12" VerticalAlignment="Center" Foreground="{StaticResource Neutral.Gray130}" Margin="6" Visibility="Collapsed" />
                <ContentPresenter Grid.Column="2" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Text="{TemplateBinding InputGestureText}" Visibility="Collapsed"/>
                <Fluent:FluentIcon x:Name="rightArrow" Grid.Column="5" Icon="ChevronRight" Size="12" VerticalAlignment="Center" Foreground="{StaticResource Neutral.Gray130}" Margin="0,4"/>
            </Grid>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right">
                <Border Grid.Row="1" Grid.ColumnSpan="2" Background="{StaticResource Neutral.White}" Margin="10,0,10,10" Effect="{StaticResource Depth8}">
                    <ContentControl x:Name="SubMenuBorder" IsTabStop="false" Template="{StaticResource FluentMenuItemSubmenuContentTemplate}">
                        <ScrollViewer CanContentScroll="true" Style="{StaticResource FluentMenuItemScrollViewer}">
                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                        </ScrollViewer>
                    </ContentControl>
                </Border>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Fill" TargetName="bd" Value="{StaticResource Neutral.Gray20}"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{StaticResource Neutral.Gray20}"/>
                <Setter Property="Foreground" Value="{StaticResource Neutral.Gray90}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="FluentMenuItemStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="{StaticResource Neutral.White}"/>
        <Setter Property="Foreground" Value="{StaticResource Neutral.Gray160}"/>
        <Setter Property="Template" Value="{StaticResource FluentSubmenuItemTemplate}"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Padding" Value="8,14"/>
                <Setter Property="Template" Value="{StaticResource FluentMenuItemTopLevelHeaderTemplate}"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Padding" Value="8,14"/>
                <Setter Property="Template" Value="{StaticResource FluentMenuItemTopLevelItemTemplate}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Padding" Value="0, 8"/>
                <Setter Property="Template" Value="{StaticResource FluentMenuItemSubmenuHeaderTemplate}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Padding" Value="0, 8"/>
            </Trigger>
        </Style.Triggers>
    </Style>
   
    <Style x:Key="FluentMenuStyle" TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{StaticResource Communication.CommunicationPrimary}"/>
        <Setter Property="Foreground" Value="{StaticResource Neutral.Gray160}"/>
        <Setter Property="TextElement.FontSize" Value="14"/>
    </Style>

    <Style x:Key="FluentContextMenuStyle" TargetType="{x:Type ContextMenu}">
        <Setter Property="Background" Value="{StaticResource Neutral.White}"/>
        <Setter Property="Foreground" Value="{StaticResource Neutral.Gray160}"/>
        <Setter Property="TextElement.FontSize" Value="14"/>
        <Setter Property="TextElement.FontWeight" Value="Normal"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="{StaticResource Neutral.White}"/>
        <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="HorizontalOffset" Value="-10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border Background="{StaticResource Neutral.White}" 
                            Margin="10,0,10,10" 
                            Effect="{StaticResource Depth4}">
                        <ScrollViewer 
                            CanContentScroll="True" 
                            Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" 
                            Uid="ScrollViewer_9">
                            <ItemsPresenter 
                                KeyboardNavigation.DirectionalNavigation="Cycle" 
                                Margin="{TemplateBinding Padding}" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                Uid="ItemsPresenter_5"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>