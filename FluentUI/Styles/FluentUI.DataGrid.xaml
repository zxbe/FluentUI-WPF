<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Fluent="clr-namespace:FluentUI">

    <Style x:Key="FluentDataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="BorderBrush" Value="{StaticResource Neutral.Gray20}"/>
        <Setter Property="Padding" Value="11"/>
        <Setter Property="TextElement.FontWeight" Value="SemiBold"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <!-- 
						IsClickable="{TemplateBinding CanUserSort}" 
						IsPressed="{TemplateBinding IsPressed}"
						IsHovered="{TemplateBinding IsMouseOver}" 
						SortDirection="{TemplateBinding SortDirection}" 
						SeparatorBrush="{TemplateBinding SeparatorBrush}" 
						SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
						-->
                        <Border 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}">
                            <StackPanel
                                Orientation="Horizontal">
                                <ContentPresenter 
                                    ContentTemplate="{TemplateBinding ContentTemplate}" 
                                    Content="{TemplateBinding Content}"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    RecognizesAccessKey="True" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Fluent:FluentIcon
                                    x:Name="SortDown"
                                    Icon="SortDown"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Margin="2"
                                    Size="12"
                                    Visibility="Collapsed"
                                    />
                                <Fluent:FluentIcon
                                    x:Name="SortUp"
                                    Icon="SortUp"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Margin="2"
                                    Size="12"
                                    Visibility="Collapsed"
                                    />
                            </StackPanel>
                        </Border>
                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left">
                            <Thumb.Style>
                                <Style TargetType="{x:Type Thumb}">
                                    <Setter Property="Width" Value="8"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Cursor" Value="SizeWE"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right">
                            <Thumb.Style>
                                <Style TargetType="{x:Type Thumb}">
                                    <Setter Property="Width" Value="8"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Cursor" Value="SizeWE"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="CanUserSort" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource Neutral.Gray20}"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{StaticResource Neutral.Gray30}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{StaticResource Neutral.Gray20}"/>
                            <Setter Property="TextElement.Foreground" Value="{StaticResource Neutral.Gray90}"/>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter Property="Visibility" Value="Visible" TargetName="SortUp"/>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter Property="Visibility" Value="Visible" TargetName="SortDown"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="FluentDataGridScrollViewTemplate" TargetType="{x:Type ScrollViewer}">
        <Grid IsHitTestVisible="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Button 
                Command="ApplicationCommands.SelectAll" 
                Focusable="False" 
                Background="Transparent"
                BorderThickness="0,0,0,1"
                BorderBrush="{StaticResource Neutral.Gray20}"
                Style="{StaticResource FluentFlatButtonStyle}"
                Height="NaN"
                Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}">
                <Button.Visibility>
                    <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}" Converter="{x:Static DataGrid.HeadersVisibilityConverter}">
                        <Binding.ConverterParameter>
                            <DataGridHeadersVisibility>All</DataGridHeadersVisibility>
                        </Binding.ConverterParameter>
                    </Binding>
                </Button.Visibility>
            </Button>
            <DataGridColumnHeadersPresenter 
                x:Name="PART_ColumnHeadersPresenter" 
                Grid.Column="1" 
                Style="{DynamicResource FluentDataGridColumnHeadersPresenterStyle}">
                <DataGridColumnHeadersPresenter.Visibility>
                    <Binding 
                        Path="HeadersVisibility" 
                        RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}" 
                        Converter="{x:Static DataGrid.HeadersVisibilityConverter}">
                        <Binding.ConverterParameter>
                            <DataGridHeadersVisibility>Column</DataGridHeadersVisibility>
                        </Binding.ConverterParameter>
                    </Binding>
                </DataGridColumnHeadersPresenter.Visibility>
            </DataGridColumnHeadersPresenter>
            <ScrollContentPresenter 
                x:Name="PART_ScrollContentPresenter" 
                Grid.ColumnSpan="2" 
                Grid.Row="1"
                CanContentScroll="{TemplateBinding CanContentScroll}" 
                CanHorizontallyScroll="False"
                CanVerticallyScroll="False" 
                ContentTemplate="{TemplateBinding ContentTemplate}" 
                Content="{TemplateBinding Content}" 
                ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                />
            <ScrollBar
                x:Name="PART_VerticalScrollBar" 
                Grid.Column="2" 
                Grid.Row="1" 
                Maximum="{TemplateBinding ScrollableHeight}" 
                Orientation="Vertical" 
                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                ViewportSize="{TemplateBinding ViewportHeight}" 
                Margin="0"
                />
            <Grid 
                x:Name="HorizontalScrollBarContainer"
                Grid.Column="1" 
                Grid.Row="2" 
                Margin="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <ScrollBar 
                    x:Name="PART_HorizontalScrollBar"
                    Grid.Column="1" 
                    Maximum="{TemplateBinding ScrollableWidth}" 
                    Orientation="Horizontal" 
                    Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
                    Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                    ViewportSize="{TemplateBinding ViewportWidth}"/>
            </Grid>

        </Grid>
    </ControlTemplate>

    <Style x:Key="FluentDataGridColumnTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource FluentTextBoxStyle}">
        <Setter Property="Margin" Value="0"/>
    </Style>

    <Style x:Key="FluentDataGridColumnComboBoxStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource FluentComboBoxStyle}">
        <Setter Property="Margin" Value="0,4.5,0,4.5"/>
    </Style>

    <Style x:Key="FluentDataGridColumnCheckBoxStyle" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource FluentCheckBoxStyle}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="TextElement.Foreground" Value="{StaticResource Neutral.Gray160}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Neutral.Gray160}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FluentCheckRadioFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Neutral.White}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Fluent:FluentIcon
                        x:Name="checkMark"
                        Icon="CheckMark"
                        Foreground="{StaticResource Neutral.Gray120}"
                        Visibility="Hidden"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" TargetName="checkMark" Value="Visible"/>
                        </Trigger>                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FluentDataGridColumnCheckBoxEditingStyle" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource FluentCheckBoxStyle}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>

    <Style x:Key="FluentDataGridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="ColumnHeaderStyle" Value="{DynamicResource FluentDataGridColumnHeaderStyle}"/>
        <Setter Property="RowHeaderStyle" Value="{DynamicResource FluentDataGridRowHeaderStyle}"/>
        <Setter Property="RowStyle" Value="{DynamicResource FluentDataGridRowStyle}"/>
        <Setter Property="CellStyle" Value="{DynamicResource FluentDataGridCellStyle}"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{x:Null}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{x:Null}"/>
        <Setter Property="Background" Value="{StaticResource Neutral.White}"/>
        <Setter Property="Foreground" Value="{StaticResource Neutral.Gray160}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="RowHeaderWidth" Value="10"/>
        <Setter Property="Fluent:FluentHelper.TextColumnStyle" Value="{StaticResource FluentDataGridColumnTextBoxStyle}"/>
        <Setter Property="Fluent:FluentHelper.ComboBoxColumnStyle" Value="{StaticResource FluentDataGridColumnComboBoxStyle}"/>
        <Setter Property="Fluent:FluentHelper.CheckBoxColumnStyle" Value="{StaticResource FluentDataGridColumnCheckBoxStyle}"/>
        <Setter Property="Fluent:FluentHelper.CheckBoxColumnEditingStyle" Value="{StaticResource FluentDataGridColumnCheckBoxEditingStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}" 
                        Padding="{TemplateBinding Padding}" 
                        SnapsToDevicePixels="True">
                        <ScrollViewer 
                            x:Name="DG_ScrollViewer" 
                            Focusable="False" 
                            Background="Red"
                            Template="{StaticResource FluentDataGridScrollViewTemplate}">
                            <ItemsPresenter 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MinRowHeight" Value="24"/>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FluentDataGridColumnHeadersPresenterStyle" TargetType="{x:Type DataGridColumnHeadersPresenter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
                    <Grid>
                        <DataGridColumnHeader 
                            x:Name="PART_FillerColumnHeader"
                            IsHitTestVisible="False" 
                            Style="{DynamicResource FluentDataGridColumnHeaderStyle}"/>
                        <ItemsPresenter/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FluentDataGridRowHeaderStyle" TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                    <Grid>
                        <!-- IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}"
						 IsSelected="{TemplateBinding IsRowSelected}" Orientation="Horizontal"
						 SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
						-->
                        <Border 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}">
                            <StackPanel Orientation="Horizontal">
                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                <Control SnapsToDevicePixels="False" Template="{Binding ValidationErrorTemplate, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridRow}}}">
                                    <Control.Visibility>
                                        <Binding Path="(Validation.HasError)" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridRow}}">
                                            <Binding.Converter>
                                                <BooleanToVisibilityConverter/>
                                            </Binding.Converter>
                                        </Binding>
                                    </Control.Visibility>
                                </Control>
                            </StackPanel>
                        </Border>
                        <Thumb x:Name="PART_TopHeaderGripper" VerticalAlignment="Top">
                            <Thumb.Style>
                                <Style TargetType="{x:Type Thumb}">
                                    <Setter Property="Height" Value="8"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Cursor" Value="SizeNS"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                        <Thumb x:Name="PART_BottomHeaderGripper" VerticalAlignment="Bottom">
                            <Thumb.Style>
                                <Style TargetType="{x:Type Thumb}">
                                    <Setter Property="Height" Value="8"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Cursor" Value="SizeNS"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Thumb.Style>
                        </Thumb>

                        <Fluent:FluentIcon
                            x:Name="selectionCircleFill"
                            Icon="CircleFill"
                            VerticalAlignment="Center"
                            Margin="4,0"
                            Foreground="{StaticResource Communication.CommunicationPrimary}"
                            Visibility="Hidden"
                            />
                        <Fluent:FluentIcon
                            x:Name="selectionCircleCompleted"
                            Icon="Completed"
                            VerticalAlignment="Center"
                            Margin="4,0"
                            Foreground="{StaticResource Neutral.White}"
                            Visibility="Hidden"
                            />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource Neutral.Gray20}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{StaticResource Neutral.Gray30}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{StaticResource Neutral.Gray20}"/>
                            <Setter Property="TextElement.Foreground" Value="{StaticResource Neutral.Gray90}"/>
                        </Trigger>
                        <Trigger Property="IsRowSelected" Value="true">
                            <Setter Property="Visibility" Value="Visible" TargetName="selectionCircleFill"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="selectionCircleCompleted"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FluentDataGridRowStyle" TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="BorderBrush" Value="{StaticResource Neutral.Gray20}"/>
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock 
                        Foreground="{StaticResource Shared.SharedRed20}" 
                        Margin="2,0,0,0" 
                        Text="!"
                        VerticalAlignment="Center">
                        <Run Text="!"/>
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True" 
                            Padding="{TemplateBinding Padding}">
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" Visibility="{TemplateBinding DetailsVisibility}">
                                <SelectiveScrollingGrid.SelectiveScrollingOrientation>
                                    <Binding Path="AreRowDetailsFrozen" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}"  Converter="{x:Static DataGrid.RowDetailsScrollingConverter}">
                                        <Binding.ConverterParameter>
                                            <SelectiveScrollingOrientation>Vertical</SelectiveScrollingOrientation>
                                        </Binding.ConverterParameter>
                                    </Binding>
                                </SelectiveScrollingGrid.SelectiveScrollingOrientation>
                            </DataGridDetailsPresenter>
                            <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical">
                                <DataGridRowHeader.Visibility>
                                    <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}" Converter="{x:Static DataGrid.HeadersVisibilityConverter}">
                                        <Binding.ConverterParameter>
                                            <DataGridHeadersVisibility>Row</DataGridHeadersVisibility>
                                        </Binding.ConverterParameter>
                                    </Binding>
                                </DataGridRowHeader.Visibility>
                            </DataGridRowHeader>
                        </SelectiveScrollingGrid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource Neutral.Gray30}"/>
                            <Setter Property="TextElement.Foreground" Value="{StaticResource Neutral.Gray190}"/>
                            <Setter Property="TextElement.FontWeight" Value="SemiBold"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource Neutral.Gray20}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource Neutral.Gray20}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding (Fluent:FluentExtra.CompactMode), RelativeSource={RelativeSource AncestorType=DataGrid}}" Value="True">
                <Setter Property="BorderThickness" Value="0"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FluentDataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="11"/>
        <Setter Property="TextElement.Foreground" Value="{StaticResource Neutral.Gray190}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border x:Name="bd" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEditing" Value="True">
                            <Setter Property="Padding" Value="1"/>
                            <Setter Property="TextElement.Foreground" Value="{x:Null}"/>
                            <Setter Property="TextElement.FontWeight" Value="Normal"/>
                        </Trigger>
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource Neutral.Gray30}"/>
                            <Setter Property="TextElement.Foreground" Value="{StaticResource Neutral.Gray190}"/>
                            <Setter Property="TextElement.FontWeight" Value="SemiBold"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource Neutral.Gray20}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{StaticResource Neutral.Gray20}"/>
                            <Setter Property="TextElement.Foreground" Value="{StaticResource Neutral.Gray90}"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding (Fluent:FluentExtra.CompactMode), RelativeSource={RelativeSource AncestorType=DataGrid}}" Value="True">
                <Setter Property="Padding" Value="11,4"/>
            </DataTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" Value="{StaticResource Neutral.Gray90}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>